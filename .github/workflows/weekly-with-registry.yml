name: "Weekly Build with All Extensions from Registry"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 18 * * 6'
jobs:
  linux-build-released-jvm:
    name: Linux - JVM build - released Quarkus
    runs-on: ubuntu-latest
    env:
      TESTCONTAINERS_RYUK_DISABLED: true
    strategy:
      matrix:
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Run Test Suite
        run: mvn -ntp -s .github/mvn-settings.xml clean test -Dts.limit-extensions=200 -Dts.extensions-in-groups-of=2
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -r artifacts-linux-jvm${{ matrix.java }}.zip . -i '**/*-reports/*.xml' '**/*.log'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: artifacts-linux-jvm${{ matrix.java }}.zip
  linux-build-released-native:
    name: Linux - Native build - released Quarkus
    runs-on: ubuntu-latest
    env:
      TESTCONTAINERS_RYUK_DISABLED: true
    strategy:
      matrix:
        java: [ 17 ]
        graalvm-version: [ "mandrel-23.1.2.0-Final" ]
        graalvm-java-version: [ "21" ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Setup GraalVM
        id: setup-graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.graalvm-version }}
          java-version: ${{ matrix.graalvm-java-version }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Test Suite
        run: mvn -ntp -e -s .github/mvn-settings.xml clean test -Dts.limit-extensions=20 -Dts.extensions-in-groups-of=4 -Dts.verify-native-mode=true -Ddisable-parallel
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -r artifacts-linux-native${{ matrix.java }}.zip . -i '**/*-reports/*.xml' '**/*.log'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: artifacts-linux-native${{ matrix.java }}.zip