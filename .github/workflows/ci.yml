name: "Pull Request CI"
on:
   - pull_request
jobs:
  linux-build-released-jvm:
    name: Linux - JVM build - released Quarkus
    runs-on: ubuntu-latest
    env:
      TESTCONTAINERS_RYUK_DISABLED: true
    strategy:
      matrix:
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Run Test Suite
        run: mvn -ntp -s .github/mvn-settings.xml clean test -DquarkusRegistryClient=false -Dts.limit-extensions=200 -Dts.extensions-in-groups-of=2
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -r artifacts-linux-jvm${{ matrix.java }}.zip . -i '**/*-reports/*.xml' '**/*.log'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: artifacts-linux-jvm${{ matrix.java }}.zip
  linux-build-released-native:
    name: Linux - Native build - released Quarkus
    runs-on: ubuntu-latest
    env:
      TESTCONTAINERS_RYUK_DISABLED: true
    strategy:
      matrix:
        java: [ 17 ]
        graalvm-version: [ "mandrel-latest" ]
        graalvm-java-version: [ "21" ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Setup GraalVM
        id: setup-graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.graalvm-version }}
          java-version: ${{ matrix.graalvm-java-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Test Suite
        run: mvn -ntp -e -s .github/mvn-settings.xml clean test -DquarkusRegistryClient=false -Dts.limit-extensions=20 -Dts.extensions-in-groups-of=5 -Dts.verify-native-mode=true -Ddisable-parallel
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -r artifacts-linux-native${{ matrix.java }}.zip . -i '**/*-reports/*.xml' '**/*.log'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: artifacts-linux-native${{ matrix.java }}.zip
  windows-build-released-jvm:
    name: Windows - JVM build - released Quarkus
    runs-on: windows-latest
    env:
      TESTCONTAINERS_RYUK_DISABLED: true
    strategy:
      matrix:
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Run Test Suite
        shell: bash
        run: mvn -ntp -s .github/mvn-settings.xml clean test -DquarkusRegistryClient=false -Dts.limit-extensions=200 -Dts.extensions-in-groups-of=2 -Dformat.skip=true
      - name: Zip Artifacts
        if: failure()
        shell: bash
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -print | grep -e "-reports" -e ".log" | grep -v "git" | tar -czf artifacts-windows-jvm${{ matrix.java }}.tar -T -
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ci-artifacts
          path: artifacts-windows-jvm${{ matrix.java }}.tar
  windows-build-released-native:
    name: Windows - Native build - released Quarkus
    runs-on: windows-latest
    env:
      TESTCONTAINERS_RYUK_DISABLED: true
    strategy:
      matrix:
        java: [ 17 ]
        graalvm-version: [ "mandrel-latest" ]
        graalvm-java-version: [ "21" ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Install cl.exe
        uses: ilammy/msvc-dev-cmd@v1
      - uses: microsoft/setup-msbuild@v1
      - name: Setup GraalVM
        id: setup-graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.graalvm-version }}
          java-version: ${{ matrix.graalvm-java-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Pagefile
        # Increased the page-file size due to memory-consumption of native-image command
        # For details see https://github.com/actions/virtual-environments/issues/785
        uses: al-cheb/configure-pagefile-action@v1.4
      - name: Run Test Suite
        shell: cmd
        # Windows have path limits and thus ts.extensions-in-groups-of is set to 1, generated app name is based on the extensions names
        # Otherwise native-image command throws errors
        # [ERROR] ...  CreateProcess error=267, The directory name is invalid
        # Fatal error: java.lang.RuntimeException: There was an error linking the native image: Linker command exited with 2
        run: mvn -ntp -e -s .github/mvn-settings.xml clean test -DquarkusRegistryClient=false -Dts.limit-extensions=20 -Dts.extensions-in-groups-of=1 -Dts.verify-native-mode=true -Dformat.skip=true -Ddisable-parallel
      - name: Zip Artifacts
        if: failure()
        shell: bash
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -print | grep -e "-reports" -e ".log" | grep -v "git" | tar -czf artifacts-windows-native${{ matrix.java }}.tar -T -
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ci-artifacts
          path: artifacts-windows-native${{ matrix.java }}.tar
